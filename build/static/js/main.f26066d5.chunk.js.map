{"version":3,"sources":["firebase-utils sync","components/quiz/QuizLayout.js","firebase-utils/firebase-client.js","components/quiz/QuizContainer.js","components/quiz/index.js","components/quiz-question/QuizQuestionLayout.js","firebase.js","components/quiz-question/index.js","components/quiz-question/QuizQuestionContainer.js","components/quiz-question/utils/dbUtils.js","components/testapp/actions/actionTypes.js","components/testapp/actions/workActions.js","components/testapp/App.js","components/testapp/index.js","components/quiz/containers/PlayArena.js","RouterRoot.js","utils/material-ui-theme.js","ThemedApp.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/rootReducer.js","redux/reducers/mainReducer.js","index.js","redux/store/configureStore.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","QuizLayout","console","log","classes","this","props","react_default","a","createElement","className","style","display","justifyContent","flexWrap","Card_default","card","CardActionArea_default","CardContent_default","Typography_default","gutterBottom","variant","component","quizName","CardActions_default","Button_default","color","button","onClick","enterQuiz","React","Component","withStyles","theme","maxWidth","media","height","margin","spacing","unit","firebase","require","checkIfUserAlive","quizId","user","Promise","reject","refPath","concat","database","ref","once","snapshot","val","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","challengeId","player1","player2","challengeQuizPlayRef","app","challengeQuizPlayObj","score","push","then","key","startQuizChallenge","quizPlayId","questionId","response","isCorrect","currentScore","responseObj","userResponse","isResponseCorrect","challengeQuizPlayResponseIndex","set","child","quizChallengeResponse","isAlive","addUserToTournamentQuiz","catch","correctAnswerRef","correctAnswer","quizUserRef","error","transaction","userTournamentQuizResponse","getResponsesForQuestion","orderByChild","equalTo","getWinnersForTournamentQuiz","QuizContainer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","upcomingQuizes","_this2","callback","allQuiz","on","getAllQuiz","value","currentTime","Date","now","map","Start_time","setState","event","preventDefault","history","_this3","quizes","quiz_QuizLayout","quiz_name","handleStartQuiz","withRouter","QuizQuestion","backgroundColor","alignItems","padding","type","width","QuizQuestionContainer","QuizQuestionLayout","quizNumber","FETCH_STUFF","doSomething","ActionTypes","App","sendTheAlert","connect","todos","dispatch","Actions","PlayArena","currentQuestion","question","canAnswer","message","getQuestion","match","params","getQuizQuestion","ques","setTimeout","answer","questionText","handleClick","option1","disabled","option2","option3","option4","Root","BrowserRouter","Switch","Route","exact","path","createMuiTheme","palette","primary","blue","ThemedApp","styles","RouterRoot","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","data","rootReducer","combineReducers","work","arguments","length","undefined","assign","hello","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","es","src_ThemedApp","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f26066d5.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 197;","/**\n * @description The page shows a particular quiz\n * @author Akanksha Choudhary <akanksha.ch29@gmail.com>\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Quiz.css'\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 200,\n  },\n  media: {\n    height: 140,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  }\n});\n\nclass QuizLayout extends React.Component {\n    componentDidMount() {\n        console.log('This needs to be removed');\n    }\n    render() {\n      const { classes } = this.props;\n      console.log(this.props.classes);\n        return (\n          <div className=\"container\">\n            <div className=\"row\">\n              <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }}>\n                <Card className={classes.card}>\n                  <CardActionArea>\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {this.props.quizName}\n                      </Typography>\n                      <Typography component=\"p\">\n                        Test your general knowledge\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                  <CardActions>\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.props.enterQuiz}>\n                      Start Quiz\n                    </Button>\n                  </CardActions>\n                </Card>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nQuizLayout.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n\nexport default withStyles(styles)(QuizLayout)\n","var firebase = require('firebase');\nvar fs = require( 'fs' );\nconst path = require('path');\n\nconst quizIndex = \"quiz\";\nconst quizQuestionsIndex = \"quizquestions\";\nconst challengeQuizPlayIndex = \"challengequizplay\";\nconst challengeQuizPlayResponseIndex = 'challengequizplayresponse'\nconst tournamentQuizPlayIndex = \"tournamentquizplay\";\nconst tournamentQuizPlayResponseIndex = 'tournamentquizplayresponse'\n\n/**\n * Add a quiz to firebase\n * @param {string} file \n */\nvar addQuestionToFirebase = function (file) {\n    // var quizQuestionText = require('../quiz_questions/GKQuiz1');\n    var quizQuestionText = require(file);\n    var ref = firebase.app().database().ref('quiz');\n    var quizObj = {\"quiz_name\" : quizQuestionText.quizQuestions.quizName, \"Quiz Tag\" : quizQuestionText.quizQuestions.quizTags[0]}\n    ref.push(quizObj).then((snapshot) => {\n        // get the quizId.\n        const quizId = snapshot.key \n        var quizQuestionRef = firebase.app().database().ref('quizquestions');\n        var quizQuestions = quizQuestionText.quizQuestions.questions;\n        for (var i=0;i<quizQuestions.length;i++) {\n            quizQuestionRef.child(quizId).child(i+1).set(\n                {\"questionText\":quizQuestions[i].question,\n                \"option1\":quizQuestions[i].options.option1,\n                \"option2\":quizQuestions[i].options.option2,\n                \"option3\":quizQuestions[i].options.option3,\n                \"option4\":quizQuestions[i].options.option4,\n                \"correctAnswer\":quizQuestions[i].correctAnswer})\n        }\n });\n};\n\n/**\n * Get all the quiz from the quiz index.\n */\nexport const getAllQuiz = function(callback) {\n    let allQuiz = null;\n    var quizRef = firebase.app().database().ref(quizIndex);\n    quizRef.on(\"value\", function(snapshot) {\n        allQuiz = snapshot.val();\n        callback(allQuiz);\n     }, function (error) {\n        console.log(\"Error: \" + error.code);\n     });\n};\n\n/**\n * \n * @param {*} quizId the id of the quiz\n * @param {*} questionId question id to be retrieved.\n */\nexport const getQuizQuestion = function(quizId, questionId, callback) {\n    // the index is like quizquestions/{quizId}/{questionId} = question object\n    var quizQuestionRef = firebase.app().database().ref(quizQuestionsIndex);\n    var quizRef = quizQuestionRef.child(quizId);\n    var questionRef = quizRef.child(questionId);\n\n    questionRef.once(\"value\", function(snapshot) {\n        callback(snapshot.val());\n     }, function (error) {\n        console.log(\"Error: \" + error.code);\n     });\n};\n/**\n * This code is for initiating s 1-1 challenge, the primary user(master) should invoke after getting opponent id.\n * The initial scores of both users will be 0, which should be updated after each answer. listner should be there for updation of score of opponent.\n * @param {*} quizId id of the quiz\n * @param {*} player1 alias/quiz name of the primary user.\n * @param {*} player2 alias/quiz name of the challenger.\n */\nconst startQuizChallenge = function(quizId, player1, player2) {\n    var user1 = player1;\n    var user2 = player2;\n    var challengeQuizPlayRef = firebase.app().database().ref(challengeQuizPlayIndex);\n    var challengeQuizPlayObj = {\"quizId\" : quizId}\n    challengeQuizPlayObj[player1] = {\"score\":0}\n    challengeQuizPlayObj[player2] = {\"score\":0}\n    var quizPlayId;\n    challengeQuizPlayRef.push(challengeQuizPlayObj).then((snapshot) => {\n        quizPlayId = snapshot.key;\n        return quizPlayId;\n    });\n    \n}\n/**\n * Index for 1-1 challenge response of each user.\n * @param {*} quizPlayId quiz play id which we get from initialization.\n * @param {*} questionId the id of the question whose response is given.\n * @param {*} user user alias who responded.\n * @param {*} response response given by the user\n * @param {*} isCorrect was the user answer correct boolean\n * @param {*} currentScore \n */\nconst quizChallengeResponse = function(quizPlayId, questionId, user, response, isCorrect, currentScore) {\n    var challengeQuizPlayRepsonseRef = firebase.app().database().ref(challengeQuizPlayResponseIndex + '/' + quizPlayId + '/' +user + '/'+ questionId);\n    /*var questionObj ={}\n    questionObj[questionId] = {\"userResponse\" : response, \"isResponseCorrect\": isCorrect };\n    var userObj ={};\n    userObj[user] = questionObj;\n    var responseObj ={}\n    responseObj[quizPlayId] = userObj*/\n    var responseObj = {\"userResponse\" : response, \"isResponseCorrect\": isCorrect };\n    \n    //var response = {\"userResponse\" : response, \"isResponseCorrect\": isCorrect };\n    challengeQuizPlayRepsonseRef.set(responseObj);\n    // update the score here for the user.\n    var challengeQuizPlayRef = firebase.app().database().ref(challengeQuizPlayIndex);\n    challengeQuizPlayRef.child(quizPlayId).child(user).child(\"score\").set(currentScore);\n}\n/**\n * Adding the user to teh tournament with isAlive = true, on any one queston isAlive becomes false and user can't continue.\n * @param {*} quizId \n * @param {*} user \n */\nconst addUserToTournamentQuiz = function(quizId, user) {\n    var refPath = `${tournamentQuizPlayIndex}/${quizId}/${user}`;\n    var tournamentQuizRef = firebase.app().database().ref().child(refPath);\n    var userObject = {\"isAlive\" : true}\n    tournamentQuizRef.set(userObject)\n}\n/**\n * Adding the response of the user as Option 1 to 4 for every question. For wrong answer mark user isAlive= false.\n * @param {*} quizId \n * @param {*} questionId \n * @param {*} userResponse \n */\nconst userTournamentQuizResponse= function(quizId, questionId,user, userResponse) {\n    // check if user is alive\n    if(!checkIfUserAlive(quizId,user).then(val => {return val}).catch(val =>{return val})) {\n        console.log(\"Error recieved\");\n        throw new Error(\"User is Malicious\");\n    }\n   // get the correct answer from dba nd compare with given answer to update isAlive\n    var correctAnswerRef = `${quizQuestionsIndex}/${quizId}/${questionId}/correctAnswer`;\n    firebase.database().ref().child(correctAnswerRef).once(\"value\", function(snapshot) {\n        \n        var correctAnswer = snapshot.val();\n      \n        if (userResponse != correctAnswer) {\n            var quizUserRef = `${tournamentQuizPlayIndex}/${quizId}/${user}/isAlive`;\n            firebase.app().database().ref(quizUserRef).set(false);\n        }\n    }, function (error) {\n        console.log(\"Error: \" + error.code);\n    });\n    var databaseRef = firebase.database().ref(tournamentQuizPlayResponseIndex).child(quizId).child(questionId).child(userResponse);\n    databaseRef.transaction(function(response) {\n        return (response || 0) + 1\n    });\n}\n\nconst checkIfUserAlive = function(quizId, user) {\n    return new Promise((resolve, reject) =>{\n        var refPath = `${tournamentQuizPlayIndex}/${quizId}/${user}/isAlive`\n        \n        firebase.database().ref(refPath).once(\"value\", function(snapshot) {\n            if (snapshot.val() === false) {\n                console.log(user + \" is Malicious User should be blocked\");\n                reject(false);\n            } else {\n                resolve(true);\n            }\n        })\n    });\n}\n\nconst getResponsesForQuestion = function(quizId, questionId) {\n    var refPath = `${tournamentQuizPlayResponseIndex}/${quizId}/${questionId}`\n        \n        firebase.database().ref(refPath).once(\"value\", function(snapshot) {\n            console.log(snapshot.val());\n        })\n}\n\nconst getWinnersForTournamentQuiz = function(quizId) {\n    var refPath = `${tournamentQuizPlayIndex}/${quizId}`\n        \n        firebase.database().ref(refPath).orderByChild(\"isAlive\").equalTo(true).once(\"value\", function(snapshot) {\n            console.log(snapshot.val());\n        })\n}\n\n\n\n// config for firebase\nconst config = {\n    apiKey: 'AIzaSyDe8UizhOLkVq0WZgyree2XinGNbBbd1No',\n    authDomain: 'sapphireapp-483.firebaseapp.com',\n    databaseURL: 'https://sapphireapp-483.firebaseio.com',\n    projectId: 'sapphireapp-483',\n    storageBucket: 'sapphireapp-483.appspot.com',\n    messagingSenderId: '930819397911'\n    };\nfirebase.initializeApp(config);\n\n\n// // testing code\n// //1 creating quizes.\n// const directoyPath = path.resolve(\"../test-firebase/quiz_questions\");\n// fs.readdir(directoyPath,function(err, files) {\n//     console.log(directoyPath);\n//     files.forEach(function(file) {\n//         console.log(file);\n//         addQuestionToFirebase(directoyPath + \"/\" + file);\n//     });\n// })\n\n//2. getting a quiz question.\n// getQuizQuestion('-LPol7rwiaUYa9aYvmsD',1, (val) => { console.log(val)} );\n//3. starting a 1-1 quiz\nvar challengeId = startQuizChallenge('-LPol7rwiaUYa9aYvmsD','jatin','shashank')\nconsole.log(challengeId);\n//4. response of a 1-1 quiz.\nquizChallengeResponse(\"-LPpExdwJIEJ_hweg_Gz\",1,'jatin','23',false,4);\n\n//5 registerUser to quiz.\naddUserToTournamentQuiz('-LPol7rwiaUYa9aYvmsD','tanay');\n//6. register answer of user to quiz.\nuserTournamentQuizResponse('-LPol7rwiaUYa9aYvmsD',1,'tanay','375')\n//7. get the options to count map for users\ngetResponsesForQuestion('-LPol7rwiaUYa9aYvmsD',1);\n//8. getWinners\ngetWinnersForTournamentQuiz('-LPol7rwiaUYa9aYvmsD');\n\n","/**\n * @description Container code will be written by Shashank\n * @author Shashank Jha\n */\nimport React from 'react';\nimport QuizLayout from './QuizLayout';\nimport { getAllQuiz } from '../../firebase-utils/firebase-client';\nimport { withRouter } from \"react-router-dom\";\n\n\nclass QuizContainer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            upcomingQuizes: {}\n        };\n    }\n\n    componentDidMount() {\n        getAllQuiz( (value) => {\n            const currentTime = Date.now();\n            let upcomingQuizes = {};\n            if(value){\n                Object.keys(value).map( (id) => {\n                    if(value[id].Start_time > currentTime){                            \n                       upcomingQuizes[id] = value[id]\n                    }\n                })\n                this.setState({\n                    upcomingQuizes\n                })\n            }\n        });       \n    }\n\n    handleStartQuiz(event, id){\n        event.preventDefault();\n        console.log('Here is ', id);\n        this.props.history.push(`/quiz/${id}`)\n    }\n\n    render() {\n        const quizes = this.state.upcomingQuizes;\n        return (\n            <div>\n                 {quizes && Object.keys(quizes)\n                    .map(id => <QuizLayout key={id} quizName={quizes[id].quiz_name} enterQuiz={(event) => {this.handleStartQuiz(event, id)}} />)} \n            </div>\n        )\n    }\n}\n\nexport default withRouter(QuizContainer);\n","import QuizContainer  from './QuizContainer';\nexport default QuizContainer;","/**\n * @description The page shows each Question\n * @author Akanksha Choudhary <akanksha.ch29@gmail.com>\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './QuizQuestion.css'\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    padding: '20px',\n    width: '100%',\n    color: 'black',\n    backgroundColor: 'white',\n  }\n});\n\nclass QuizQuestion extends React.Component {\n    componentDidMount() {\n        console.log('This needs to be removed');\n    }\n    render() {\n      const { classes } = this.props;\n        return (\n          <div className=\"container\" style={{ backgroundColor: '#2f0338' }}>\n            <div className=\"row\">\n              <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', alignItems: 'center' }}>\n                  <div style={{ height: '200px', display: 'flex', justifyContent: 'center', flexWrap: 'wrap', alignItems: 'center', padding: '15px' }}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ color: 'white' }}>\n                      What do France, Portugal, Greece and Italy have in common?\n                    </Typography>\n                  </div>\n                  <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }}>\n                    <Button variant=\"outlined\" className={classes.button} type=\"button\">Option1</Button>\n                    <Button variant=\"outlined\" className={classes.button} type=\"button\">Option2</Button>\n                    <Button variant=\"outlined\" className={classes.button} type=\"button\">Option3</Button>\n                    <Button variant=\"outlined\" className={classes.button} type=\"button\">Option4</Button>\n                  </div>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nQuizQuestion.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n\nexport default withStyles(styles)(QuizQuestion)\n","import firebase from 'firebase';\n\nconst config = {\n    apiKey: 'AIzaSyDe8UizhOLkVq0WZgyree2XinGNbBbd1No',\n    authDomain: 'sapphireapp-483.firebaseapp.com',\n    databaseURL: 'https://sapphireapp-483.firebaseio.com',\n    projectId: 'sapphireapp-483',\n    storageBucket: 'sapphireapp-483.appspot.com',\n    messagingSenderId: '930819397911'\n  };\n\n// firebase.initializeApp(config);\n\nexport default firebase;\n// export const database = firebase.database();\n","import QuizQuestionContainer  from './QuizQuestionContainer';\nexport default QuizQuestionContainer;\n","/**\n * @description Container code will be written by Shashank\n * @author Shashank Jha\n */\nimport React from 'react';\nimport QuizQuestion from './QuizQuestionLayout';\nimport { getAllQuiz } from './utils/dbUtils';\n\nclass QuizQuestionContainer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        console.log('Needs to be removed')\n        getAllQuiz();\n    }\n\n    render() {\n        return (\n            <div>\n                <QuizQuestion quizNumber={23} />\n            </div>\n        )\n    }\n}\n\nexport default QuizQuestionContainer\n","import firebase from '../../../firebase'\n\nconst quizIndex=\"quiz\";\nconst quizQuestionsIndex=\"quizquestions\";\n// const challengeQuizPlayIndex=\"challengequizplay\";\n// const challengeQuizPlayResponseIndex='challengequizplayresponse'\n\nexport const getAllQuiz = function() {\n    var quizRef = firebase.app().database().ref(quizIndex);\n    quizRef.on(\"value\", function(snapshot) {\n        console.log(snapshot.val());\n    }, function (error) {\n        console.log(\"Error: \" + error.code);\n    });\n};\n\nconst getQuizQuestion = function(quizId, questionId) {\n    var quizQuestionRef = firebase.app().database().ref(quizQuestionsIndex);\n    var quizRef = quizQuestionRef.child(quizId);\n    var questionRef = quizRef.child(questionId);\n\n    questionRef.once(\"value\", function(snapshot) {\n    console.log(snapshot.val());\n    }, function (error) {\n    console.log(\"Error: \" + error.code);\n    });\n};\n","/**\n * @author Shashank\n * @description  All Action types are defined \n */\nexport const FETCH_STUFF = 'FETCH_STUFF';\nexport const RECEIVE_STUFF = 'RECEIVE_STUFF';\n","/**\n * @author Shashank\n * @description  Actions are defined here\n */\nimport * as ActionTypes from './actionTypes';\n\nexport const doSomething = () => {\n    return {\n        type: ActionTypes.FETCH_STUFF\n    }\n}\n","/**\n * @author Shashank\n * @description  This is the App Container\n */\nimport React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport * as Actions from './actions/workActions';\n\nclass App extends Component {\n\n    render() {\n\n        return (\n            <div className=\"App\">\n                <h1> Start putting your code here </h1>\n                <button onClick={this.props.sendTheAlert}>Click</button>\n            </div>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return ({\n        todos: state\n    })\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return ({\n        sendTheAlert: () => { dispatch(Actions.doSomething()) }\n    })\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import App from './App';\nexport default App;","import React, { Component } from 'react';\nimport { getQuizQuestion } from \"../../../firebase-utils/firebase-client\";\nimport Button from '@material-ui/core/Button';\n\nclass PlayArena extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            currentQuestion: 1,\n            question: null,\n            canAnswer: true,\n            message: \"\"\n        }\n    }\n\n    componentDidMount(){\n        this.getQuestion();\n    }\n\n    getQuestion(){\n\n        let question;\n        let questionPromise = new Promise( (resolve, reject) => {\n            const { quizId } = this.props.match.params;\n            console.log(\"QuizID: \", quizId);\n            const questionId = this.state.currentQuestion;\n            getQuizQuestion(quizId, questionId, (ques) => {\n                console.log(ques);\n                question = ques;\n                resolve();\n            });\n        });\n\n        questionPromise.then( (val) => {\n            setTimeout( () => {\n                this.setState({\n                    question,\n                    canAnswer: true,\n                    message: \"\"\n                })\n            }, 5000)\n        });\n    }\n\n    handleClick(event, answer){\n        event.preventDefault();\n        let message= \"\";\n        let currentQuestion = this.state.currentQuestion;\n        (answer === this.state.question.correctAnswer)?\n            message=\"Correct\":    \n            message=\"Incorrect\";\n        this.setState({\n            canAnswer: false,\n            message,\n            currentQuestion: currentQuestion+1,\n        }, this.getQuestion());\n    }\n\n    render(){\n        return(\n            <div>\n                {!this.state.canAnswer && \n                    <h4>Remaining Time for next question: 5</h4>\n                }\n                {this.state.question ?\n                    <div>\n                        <h3>Question Statement: {this.state.question.questionText}</h3>\n                        <Button variant=\"contained\" color=\"primary\" \n                            onClick={ (event) => this.handleClick(event, this.state.question.option1)}\n                            disabled={!this.state.canAnswer}>\n                            {this.state.question.option1}\n                        </Button>   \n                        <br /><br />\n                        <Button variant=\"contained\" color=\"primary\" \n                            onClick={ (event) => this.handleClick(event, this.state.question.option2)}\n                            disabled={!this.state.canAnswer}>\n                            {this.state.question.option2}\n                        </Button>   \n                        <br /><br />\n                        <Button variant=\"contained\" color=\"primary\" \n                            onClick={ (event) => this.handleClick(event, this.state.question.option3)}\n                            disabled={!this.state.canAnswer}>\n                            {this.state.question.option3}\n                        </Button>   \n                        <br /><br />\n                        <Button variant=\"contained\" color=\"primary\" \n                            onClick={ (event) => this.handleClick(event, this.state.question.option4)}\n                            disabled={!this.state.canAnswer}>\n                            {this.state.question.option4}\n                        </Button>                \n                    </div>:\n                    <div>\n                        <h4>Time for Quiz to start: 5</h4>\n                    </div>\n                }\n                {!this.state.canAnswer && \n                    <h4>{this.state.message}</h4>\n                }\n            </div>\n        )\n    }\n}\n\nexport default PlayArena;\n","/**\n * @description Router root for frontend routing\n * @author Tanay Pratap <tanay.mit@gmail.com>\n */\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport QuizContainer from './components/quiz';\nimport QuizQuestionContainer from './components/quiz-question';\nimport App from './components/testapp';\nimport PlayArena from './components/quiz/containers/PlayArena';\n\nfunction Root(){\n    return(\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={QuizContainer} />\n                <Route path=\"/test-app\" component={App} />\n                <Route path=\"/quiz/:quizId\" component={PlayArena} />\n                <Route exact path=\"/questions\" component={QuizQuestionContainer} />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default Root;\n","/**\n*\n*/\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n  },\n});\n\nexport default theme;\n","/**\n * @author Shashank\n * @description  This is the App Container\n */\nimport React from 'react';\nimport Root from './RouterRoot';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './utils/material-ui-theme'\n\n\nfunction ThemedApp(){\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Root />\n    </MuiThemeProvider>\n  )\n}\nexport default ThemedApp","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"," /**\n * @author Shashank\n * @description  Initial State of the Redux Store\n */\nexport default {\n    data: []\n};\n","/**\n * @author Shashank\n * @description  This is the root reducer\n */\nimport {combineReducers} from 'redux';\nimport work from './mainReducer';\n\nconst rootReducer = combineReducers({\n  work\n});\n\nexport default rootReducer;\n","/**\n * @author Shashank\n * @description  This is the main reducer\n */\nimport initialState from './initialState';\nimport { FETCH_STUFF } from '../../components/testapp/actions/actionTypes';\n\nexport default function work(state=initialState, action){ \n    switch(action.type){\n        case FETCH_STUFF:\n            console.log('FS');\n            return Object.assign({}, state, {\n                \"hello\": 1\n            });\n        default:\n            return state;\n    }\n}\n","/**\n * @author Shashank\n * @description  The entry point js file \n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ThemedApp from './ThemedApp';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store/configureStore';\n\n// This method invokes the createstore method passing\n// reducer and initial state\nconst store = configureStore();\n\nReactDOM.render(\n<Provider store={store}>\n    <ThemedApp />\n</Provider>, \ndocument.getElementById('root'));\n\n// This registers a service worker\nserviceWorker.register();\n","/**\n * @author Shashank\n * @description  Redux Store is configured here\n */\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    compose(applyMiddleware(thunk))\n  );\n}"],"sourceRoot":""}